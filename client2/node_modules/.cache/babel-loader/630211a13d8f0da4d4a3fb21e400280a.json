{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pongs\\\\Desktop\\\\BUU\\\\buu_t_shirt\\\\client2\\\\src\\\\components\\\\Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport Form from \"react-bootstrap/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart() {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [buy_list, setBuylist] = useState([]);\n  const [sale_date, setDate] = useState([]);\n\n  const loadList = async () => {\n    try {\n      const resp = await fetch(`http://localhost:5000/getChart`);\n      const jsonData = await resp.json();\n      setList(jsonData);\n      console.log(\"Resp\", resp);\n      console.log(\"List:\", list);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Enter useEffect()\");\n    loadList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        class: \"form-control mr-sm-2\",\n        type: \"search\",\n        placeholder: \"Search\",\n        onChange: e => {\n          setDate(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), buy_list.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.buy_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), list.map(elt => {\n      return /*#__PURE__*/_jsxDEV(Bar, {\n        data: {\n          labels: [elt.sale_date],\n          datasets: [{\n            label: \"Cost\",\n            data: [elt.cost],\n            backgroundColor: [\"rgba(255, 99, 132, 0.5)\", \"rgba(54, 162, 235, 0.5)\", \"rgba(255, 206, 86, 0.5)\", \"rgba(75, 192, 192, 0.5)\", \"rgba(153, 102, 255, 0.5)\", \"rgba(255, 159, 64, 0.5)\"],\n            borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255,1)\", \"rgba(255, 159, 64, 1)\"],\n            borderWidth: 1\n          }, {\n            label: \"Price\",\n            data: [elt.price],\n            backgroundColor: \"red\"\n          }, {\n            label: \"Profit\",\n            data: [elt.profit],\n            backgroundColor: \"green\"\n          }]\n        },\n        width: 100,\n        height: 50,\n        options: {\n          maintainAspectRatio: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"eDQftKHua2CSs1R0OXaroxYnHCs=\");\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/pongs/Desktop/BUU/buu_t_shirt/client2/src/components/Chart.js"],"names":["React","useState","useEffect","Bar","Form","Chart","list","setList","buy_list","setBuylist","sale_date","setDate","loadList","resp","fetch","jsonData","json","console","log","err","error","message","e","target","value","map","item","buy_date","elt","labels","datasets","label","data","cost","backgroundColor","borderColor","borderWidth","price","profit","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport default function Chart() {\r\n  const [list, setList] = useState([]);\r\n  const [buy_list,setBuylist] = useState([]);\r\n  const [sale_date, setDate] = useState([]);\r\n\r\n  const loadList = async () => {\r\n    try {\r\n      const resp = await fetch(`http://localhost:5000/getChart`);\r\n      const jsonData = await resp.json();\r\n\r\n      setList(jsonData);\r\n\r\n      console.log(\"Resp\", resp);\r\n      console.log(\"List:\", list);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"Enter useEffect()\");\r\n    loadList();\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Chart</h2>\r\n      <td>\r\n          <Form.Control\r\n          class=\"form-control mr-sm-2\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          onChange={(e) =>{\r\n            setDate(e.target.value)\r\n          }}\r\n          />\r\n          {buy_list.map((item) => {\r\n            return <p>{item.buy_date}</p>\r\n          })}\r\n        </td>\r\n      {list.map((elt) => {\r\n        return (\r\n          <Bar\r\n            data={{\r\n              labels: [elt.sale_date],\r\n              datasets: [\r\n                {\r\n                  label: \"Cost\",\r\n                  data: [elt.cost],\r\n                  backgroundColor: [\r\n                    \"rgba(255, 99, 132, 0.5)\",\r\n                    \"rgba(54, 162, 235, 0.5)\",\r\n                    \"rgba(255, 206, 86, 0.5)\",\r\n                    \"rgba(75, 192, 192, 0.5)\",\r\n                    \"rgba(153, 102, 255, 0.5)\",\r\n                    \"rgba(255, 159, 64, 0.5)\",\r\n                  ],\r\n                  borderColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255,1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                  ],\r\n                  borderWidth: 1,\r\n                },\r\n                {\r\n                  label: \"Price\",\r\n                  data: [elt.price],\r\n                  backgroundColor: \"red\",\r\n                },\r\n                {\r\n                  label: \"Profit\",\r\n                  data: [elt.profit],\r\n                  backgroundColor: \"green\",\r\n                },\r\n              ],\r\n            }}\r\n            width={100}\r\n            height={50}\r\n            options={{ maintainAspectRatio: true }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}