{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\62310\\\\Downloads\\\\buu_t_shirt\\\\client2\\\\src\\\\components\\\\Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Form from \"react-bootstrap/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart() {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [buy_list, setBuylist] = useState([]);\n  const [sale_date, setDate] = useState([]);\n  const [profit, setProfit] = useState([]);\n\n  const loadList = async () => {\n    try {\n      const resp = await fetch(`http://localhost:5000/getChart`);\n      const jsonData = await resp.json();\n      setList(jsonData);\n      console.log(\"Resp\", resp);\n      console.log(\"List:\", list);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Enter useEffect()\");\n    loadList();\n  }, [profit]);\n  const chart_1_date = list.map(x => {\n    return x.sale_date;\n  });\n  const chart_1_cost = list.map(x => {\n    return x.cost;\n  });\n  const chart_1_price = list.map(x => {\n    return x.price;\n  });\n  const chart_1_profit = list.map(x => {\n    return x.profit;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: chart_1_date,\n        datasets: [{\n          label: \"Cost\",\n          borderWidth: 2,\n          borderColor: \"pink\",\n          data: chart_1_cost,\n          backgroundColor: \"pink\"\n        }, {\n          label: \"Price\",\n          borderWidth: 2,\n          borderColor: \"red\",\n          data: chart_1_price,\n          backgroundColor: \"red\"\n        }, {\n          label: \"Profit\",\n          borderWidth: 2,\n          borderColor: \"green\",\n          data: chart_1_profit,\n          backgroundColor: \"green\"\n        }]\n      },\n      width: 100,\n      height: 50,\n      options: {\n        maintainAspectRatio: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"2RddvV8x38cC6HLwv3iTq7Ds4FQ=\");\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/62310/Downloads/buu_t_shirt/client2/src/components/Chart.js"],"names":["React","useState","useEffect","Line","Form","Chart","list","setList","buy_list","setBuylist","sale_date","setDate","profit","setProfit","loadList","resp","fetch","jsonData","json","console","log","err","error","message","chart_1_date","map","x","chart_1_cost","cost","chart_1_price","price","chart_1_profit","labels","datasets","label","borderWidth","borderColor","data","backgroundColor","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport default function Chart() {\r\n  const [list, setList] = useState([]);\r\n  const [buy_list,setBuylist] = useState([]);\r\n  const [sale_date, setDate] = useState([]);\r\n  const [profit,setProfit] = useState([]);\r\n\r\n  const loadList = async () => {\r\n    try {\r\n      const resp = await fetch(`http://localhost:5000/getChart`);\r\n      const jsonData = await resp.json();\r\n\r\n      setList(jsonData);\r\n\r\n      console.log(\"Resp\", resp);\r\n      console.log(\"List:\", list);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"Enter useEffect()\");\r\n    loadList();\r\n  }, [profit]);\r\n\r\n    const chart_1_date = list.map(x=>{\r\n     return x.sale_date\r\n     \r\n  });\r\n  const chart_1_cost = list.map(x=>{\r\n    return x.cost\r\n    \r\n });\r\n const chart_1_price = list.map(x=>{\r\n  return x.price\r\n  \r\n});\r\nconst chart_1_profit = list.map(x=>{\r\n  return x.profit\r\n  \r\n});\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Chart</h2>    \r\n          <Line\r\n            data={{\r\n              labels: chart_1_date,\r\n              datasets: [\r\n                {\r\n                  label: \"Cost\",\r\n                  borderWidth: 2,\r\n                  borderColor: \"pink\",\r\n                  data: chart_1_cost,\r\n                  backgroundColor: \"pink\",\r\n                },\r\n                {\r\n                  label: \"Price\",\r\n                  borderWidth: 2,\r\n                  borderColor: \"red\",\r\n                  data: chart_1_price,\r\n                  backgroundColor: \"red\",\r\n                },\r\n                {\r\n                  label: \"Profit\",\r\n                  borderWidth: 2,\r\n                  borderColor: \"green\",\r\n                  data: chart_1_profit,\r\n                  backgroundColor: \"green\",\r\n                },\r\n              ],\r\n            }}\r\n            width={100}\r\n            height={50}\r\n            options={{ maintainAspectRatio: true }}\r\n          />\r\n        \r\n      \r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}